{
  "Description": "Launching VPC and Subnets, NATInstance for DCOS Deployment",
  "Mappings": {
    "NATAmi": {
      "eu-west-1": {
        "default": "ami-3760b040"
      },
      "us-west-2": {
        "default": "ami-bb69128b"
      },
      "ap-southeast-1": {
        "default": "ami-b082dae2"
      },
      "eu-central-1": {
        "default": "ami-204c7a3d"
      },
      "sa-east-1": {
        "default": "ami-b972dba4"
      },
      "ap-southeast-2": {
        "default": "ami-996402a3"
      },
      "us-east-1": {
        "default": "ami-4c9e4b24"
      },
      "us-west-1": {
        "default": "ami-2b2b296e"
      },
      "ap-northeast-1": {
        "default": "ami-55c29e54"
      }
    }
  },
  "Resources": {
    "VPCAdminSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "VPC Admin Security Group",
        "VpcId": {
          "Ref": "Vpc"
        },
        "SecurityGroupIngress": [{
          "IpProtocol": "tcp",
          "ToPort": "22",
          "FromPort": "22",
          "CidrIp": {
            "Ref": "AdminLocation"
          }
        }, {
          "IpProtocol": "-1",
          "ToPort": "0",
          "FromPort": "65535",
          "CidrIp": {
            "Ref": "VPCSubnetRange"
          }
        }]
      }
    },
    "VPCAdminToVPCAdminIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "VPCAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "FromPort": "0",
        "SourceSecurityGroupId": {
          "Ref": "VPCAdminSecurityGroup"
        },
        "ToPort": "65535"
      }
    },
    "DHCPOptions": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ],
        "DomainName": {
          "Fn::If": [
            "RegionIsUsEast1",
            "ec2.internal", {
              "Fn::Join": [
                "", [{
                    "Ref": "AWS::Region"
                  },
                  ".compute.internal"
                ]
              ]
            }
          ]
        }
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "DependsOn": "Vpc",
      "Properties": {
        "Tags": [{
          "Key": "Application",
          "Value": {
            "Ref": "AWS::StackName"
          }
        }, {
          "Key": "Network",
          "Value": "Public"
        }]
      }
    },
    "PrivateInboundNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "PortRange": {
          "From": "0",
          "To": "65535"
        },
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        },
        "CidrBlock": "0.0.0.0/0",
        "RuleNumber": "100",
        "RuleAction": "allow",
        "Protocol": "-1",
        "Egress": "false"
      }
    },
    "InboundNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "PortRange": {
          "From": "0",
          "To": "65535"
        },
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "CidrBlock": "0.0.0.0/0",
        "RuleNumber": "100",
        "RuleAction": "allow",
        "Protocol": "-1",
        "Egress": "false"
      }
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "Tags": [{
          "Key": "Application",
          "Value": {
            "Ref": "AWS::StackName"
          }
        }, {
          "Key": "Network",
          "Value": "Private"
        }],
        "CidrBlock": {
          "Ref": "PrivateSubnetRange1"
        },
        "VpcId": {
          "Ref": "Vpc"
        },
        "AvailabilityZone": {
          "Ref": "VpcAZ1"
        }
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "Tags": [{
          "Key": "Application",
          "Value": {
            "Ref": "AWS::StackName"
          }
        }, {
          "Key": "Network",
          "Value": "Private"
        }],
        "CidrBlock": {
          "Ref": "PrivateSubnetRange2"
        },
        "VpcId": {
          "Ref": "Vpc"
        },
        "AvailabilityZone": {
          "Ref": "VpcAZ2"
        }
      }
    },
    "PrivateRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "InstanceId": {
          "Ref": "NATInstance"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        }
      }
    },
    "PublicSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PrivateNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "Tags": [{
          "Key": "Application",
          "Value": {
            "Ref": "AWS::StackName"
          }
        }, {
          "Key": "Network",
          "Value": "Public"
        }],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PublicSubnetNetworkAclAssociation1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        }
      }
    },
    "PublicSubnetNetworkAclAssociation2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        }
      }
    },
    "PrivateSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet1"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        }
      }
    },
    "PrivateSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet2"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        }
      }
    },
    "VPCAdminRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action": [
              "sts:AssumeRole"
            ],
            "Principal": {
              "Service": [
                "ec2.amazonaws.com"
              ]
            }
          }]
        },
        "Policies": [{
          "PolicyName": "VPCAdmin",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Resource": [{
                "Ref": "AWS::StackId"
              }, {
                "Fn::Join": [
                  "", [{
                      "Ref": "AWS::StackId"
                    },
                    "/*"
                  ]
                ]
              }],
              "Action": [
                "cloudformation:*"
              ]
            }, {
              "Resource": "*",
              "Action": [
                "ec2:DescribeKeyPairs",
                "ec2:DescribeSubnets",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:UpdateAutoScalingGroup",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeScalingActivities",
                "elasticloadbalancing:DescribeLoadBalancers",
                "ec2:AssignPrivateIpAddresses",
                "ec2:DescribeInstances",
                "ec2:AssociateAddress"
              ],
              "Effect": "Allow"
            }, {
              "Resource": "*",
              "Action": [
                "cloudwatch:PutMetricAlarm",
                "cloudwatch:GetMetricStatistics",
                "cloudwatch:ListMetrics",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:PutMetricData",
                "cloudwatch:SetAlarmState",
                "cloudwatch:EnableAlarmActions",
                "cloudwatch:DisableAlarmActions"
              ],
              "Effect": "Allow"
            }]
          }
        }]
      }
    },
    "VPCAdminInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [{
          "Ref": "VPCAdminRole"
        }],
        "Path": "/"
      }
    },
    "PrivateSubnetNetworkAclAssociation1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet1"
        },
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        }
      }
    },
    "PrivateSubnetNetworkAclAssociation2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet2"
        },
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        }
      }
    },
    "NATInstance": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": "GatewayToInternet",
      "Properties": {
        "KeyName": {
          "Ref": "KeyName"
        },
        "NetworkInterfaces": [{
          "DeviceIndex": "0",
          "DeleteOnTermination": "true",
          "SubnetId": {
            "Ref": "PublicSubnet1"
          },
          "AssociatePublicIpAddress": "true",
          "GroupSet": [{
            "Ref": "VPCAdminSecurityGroup"
          }]
        }],
        "SourceDestCheck": "false",
        "ImageId": {
          "Fn::FindInMap": [
            "NATAmi", {
              "Ref": "AWS::Region"
            },
            "default"
          ]
        },
        "InstanceType": "m3.medium",
        "IamInstanceProfile": {
          "Ref": "VPCAdminInstanceProfile"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "", [
                "#cloud-config\n",
                "write_files:\n",
                "  - path: /root/go-aws-mon.sh\n",
                "    permissions: 0755\n",
                "    owner: root\n",
                "    content:  |\n",
                "      #!/bin/bash - \n",
                "        if [ ! -x /root/go-aws-mon ]; then\n",
                "          wget -O /root/go-aws-mon https://github.com/a3linux/go-aws-mon/raw/master/bin/go-aws-mon\n",
                "          chmod +x /root/go-aws-mon\n",
                "        fi\n",
                "  ",
                "  \n",
                "      /root/go-aws-mon --mem-used --mem-avail --disk-space-used --disk-space-avail --disk-inode-util --disk-path=/\n",
                "  ",
                "  \n",
                "  - path: /etc/cron.d/go-aws-mon\n",
                "    permissions: 0644\n",
                "    owner: root\n",
                "    content: |\n",
                "      */5 * * * * root /root/go-aws-mon.sh\n",
                " ",
                "\n"
              ]
            ]
          }
        }
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "GatewayToInternet",
      "Properties": {
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [{
          "Key": "Application",
          "Value": {
            "Ref": "AWS::StackName"
          }
        }, {
          "Key": "Network",
          "Value": "Public"
        }],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "Vpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsHostnames": "true",
        "Tags": [{
          "Key": "Application",
          "Value": {
            "Ref": "AWS::StackName"
          }
        }, {
          "Key": "Network",
          "Value": "Public"
        }],
        "CidrBlock": {
          "Ref": "VPCSubnetRange"
        },
        "EnableDnsSupport": "true"
      }
    },
    "OutboundNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "PortRange": {
          "From": "0",
          "To": "65535"
        },
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "CidrBlock": "0.0.0.0/0",
        "RuleNumber": "100",
        "RuleAction": "allow",
        "Protocol": "-1",
        "Egress": "true"
      }
    },
    "PrivateOutboundNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "PortRange": {
          "From": "0",
          "To": "65535"
        },
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        },
        "CidrBlock": "0.0.0.0/0",
        "RuleNumber": "100",
        "RuleAction": "allow",
        "Protocol": "-1",
        "Egress": "true"
      }
    },
    "PrivateRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [{
          "Key": "Application",
          "Value": {
            "Ref": "AWS::StackName"
          }
        }, {
          "Key": "Network",
          "Value": "Public"
        }],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "Tags": [{
          "Key": "Application",
          "Value": {
            "Ref": "AWS::StackName"
          }
        }, {
          "Key": "Network",
          "Value": "Public"
        }],
        "CidrBlock": {
          "Ref": "PublicSubnetRange1"
        },
        "VpcId": {
          "Ref": "Vpc"
        },
        "AvailabilityZone": {
          "Ref": "VpcAZ1"
        }
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "Tags": [{
          "Key": "Application",
          "Value": {
            "Ref": "AWS::StackName"
          }
        }, {
          "Key": "Network",
          "Value": "Public"
        }],
        "CidrBlock": {
          "Ref": "PublicSubnetRange2"
        },
        "VpcId": {
          "Ref": "Vpc"
        },
        "AvailabilityZone": {
          "Ref": "VpcAZ2"
        }
      }
    },
    "GatewayToInternet": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": "InternetGateway",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PublicNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "Tags": [{
          "Key": "Application",
          "Value": {
            "Ref": "AWS::StackName"
          }
        }, {
          "Key": "Network",
          "Value": "Public"
        }],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "VPCDHCPOptionsAssociation": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc"
        },
        "DhcpOptionsId": {
          "Ref": "DHCPOptions"
        }
      }
    }
  },
  "Conditions": {
    "RegionIsUsEast1": {
      "Fn::Equals": [{
          "Ref": "AWS::Region"
        },
        "us-east-1"
      ]
    }
  },
  "Outputs": {
    "NATInstanceIP": {
      "Value": {
        "Fn::GetAtt": [
          "NATInstance",
          "PrivateIp"
        ]
      },
      "Description": "NATInstance Private IP"
    },
    "NATInstanceDNS": {
      "Value": {
        "Fn::GetAtt": [
          "NATInstance",
          "PublicDnsName"
        ]
      },
      "Description": "NATInstance Public DNS"
    }
  },
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "KeyName": {
      "Description": "Required: Specify your AWS EC2 Key Pair.",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "AdminLocation": {
      "Description": "Optional: Specify the IP range to whitelist for access to the admin zone. Must be a valid CIDR.",
      "Type": "String",
      "AllowedPattern": "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$",
      "ConstraintDescription": "must be a valid CIDR.",
      "MaxLength": "18",
      "MinLength": "9",
      "Default": "0.0.0.0/0"
    },
    "VPCSubnetRange": {
      "Description": "VPC Subnet Range",
      "AllowedPattern": "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$",
      "ConstraintDescription": "must be a valid CIDR.",
      "MaxLength": "18",
      "MinLength": "9",
      "Type": "String",
      "Default": "10.0.0.0/16"
    },
    "PublicSubnetRange1": {
      "Description": "Public Subnet Range In AZ 1",
      "AllowedPattern": "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$",
      "ConstraintDescription": "must be a valid CIDR.",
      "MaxLength": "18",
      "MinLength": "9",
      "Type": "String",
      "Default": "10.0.0.0/18"
    },
    "PublicSubnetRange2": {
      "Description": "Public Subnet Range In AZ 2",
      "AllowedPattern": "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$",
      "ConstraintDescription": "must be a valid CIDR.",
      "MaxLength": "18",
      "MinLength": "9",
      "Type": "String",
      "Default": "10.0.64.0/18"
    },
    "PrivateSubnetRange1": {
      "Description": "Private Subnet Range In AZ 1",
      "AllowedPattern": "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$",
      "ConstraintDescription": "must be a valid CIDR.",
      "MaxLength": "18",
      "MinLength": "9",
      "Type": "String",
      "Default": "10.0.128.0/18"
    },
    "PrivateSubnetRange2": {
      "Description": "Private Subnet Range In AZ 2",
      "AllowedPattern": "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$",
      "ConstraintDescription": "must be a valid CIDR.",
      "MaxLength": "18",
      "MinLength": "9",
      "Type": "String",
      "Default": "10.0.192.0/18"
    },
    "VpcAZ1": {
      "Description": "AvailabilityZones for the VPC",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "VpcAZ2": {
      "Description": "AvailabilityZones for the VPC",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    }
  },
  "Metadata": {
    "TemplateGenerationDate": "2016-03-08 07:12:49.661100",
    "DcosImageCommit": "d48ae9d5f101049804564ae54f75c2969a7a2cc0"
  }
}
